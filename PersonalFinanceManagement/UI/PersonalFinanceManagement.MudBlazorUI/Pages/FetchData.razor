@page "/fetchdata"
@using PersonalFinanceManagement.Domain.DTOModels;
@using PersonalFinanceManagement.Domain.Interfaces.WebApiClients;
@attribute [Authorize]
@inject ITransactionsWebApiClient TransactionsWebApiClient

<MudText Typo="Typo.h3" GutterBottom="true">Transaction</MudText>
@if (_transactions == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudSwitch @bind-Checked="_loading">Show Loading</MudSwitch>
    <MudTable Items="@_transactions" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info" SortLabel="Sort By">
        <ColGroup>
            <col style="width:max-content" />
            <col style="width:20%" />
            <col />
            <col style="width:fit-content" />
            <col style="width:min-content" />
        </ColGroup>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<TransactionDTO, object>(x => x.Id)">Id</MudTableSortLabel></MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Note</MudTh>
            <MudTh>Amount</MudTh>
            <MudTh>Date</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Note">@context.Note</MudTd>
            <MudTd DataLabel="Amount" Style="text-align:right">@context.Amount</MudTd>
            <MudTd DataLabel="Date">@context.Date.Date</MudTd>
        </RowTemplate>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>
    </MudTable>
}


@code {
    private bool _loading;
    private IEnumerable<TransactionDTO> _transactions = new List<TransactionDTO>();

    protected override async Task OnInitializedAsync() => await LoadData();

    private async Task LoadData()
    {
        _loading = true;
        _transactions = (await TransactionsWebApiClient.GetAllAsync()).ToList();
        _loading = false;
    }
}
